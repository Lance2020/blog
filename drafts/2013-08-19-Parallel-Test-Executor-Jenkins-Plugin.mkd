---
layout: post
title: Using Parallel Testing Executor Jenkins plugin for non-java jobs
tags: [continous integration, jenkins-plugins, jenkins]
---

## Background

In Kohsuke Kawaguchi's slides [Jenkins state of union 2013](http://www.slideshare.net/kohsuke/jenkins-state-of-union-2013), one of interesting plugin is [Parallel Test Executor Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Parallel+Test+Executor+Plugin), it looks like it can divide the testing jobs and collect the result after that.

It could be done in other way, while it will be excellent if it can be achieved using native jenlins plugins.

So I give a try with local setup

### Job 1 : control  

![control job][img-parallel-job1]

### Job 2 : test_agent

![test_agent job][img-parallel-job2]

### Script

	#!/bin/env python
	from junit_xml import TestSuite, TestCase

	with open("testcase.txt") as fp:
		testcase = fp.read().splitlines()
		print testcase

	test_cases = []
	for i in range(5):
		test_cases.extend([TestCase("testname %d" % i, 'testcae_%d' % i, 12)])

	ts = TestSuite("my test suite", test_cases)
	# pretty printing is on by default but can be disabled using prettyprint=False

	with open("result.xml","w") as fp:
		fp.write(TestSuite.to_xml_string([ts]))

## Issues:

Are jobs real splitted or misunderstand ?

Shared in <a href="https://plus.google.com/100729724738053223351?rel=author">Google</a>

## Reference

*   [K.K's Jenkins state of union 2013](http://www.slideshare.net/kohsuke/jenkins-state-of-union-2013)
*   [Parallel Test Executor Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Parallel+Test+Executor+Plugin)
*   [Parallel Test Executor Plugin main function](https://github.com/jenkinsci/parallel-test-executor-plugin/blob/master/src/main/java/org/jenkinsci/plugins/parallel_test_executor/ParallelTestExecutor.java)

  [img-parallel-job1]: http://larrycaiyu.com/blog/images/img-parallel-job1.png
  [img-parallel-job2]: http://larrycaiyu.com/blog/images/img-parallel-job2.png

